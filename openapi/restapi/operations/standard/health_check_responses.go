// Code generated by go-swagger; DO NOT EDIT.

package standard

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
)

// HealthCheckOKCode is the HTTP code returned for type HealthCheckOK
const HealthCheckOKCode int = 200

/*
HealthCheckOK OK

swagger:response healthCheckOK
*/
type HealthCheckOK struct {

	/*
	  In: Body
	*/
	Payload *HealthCheckOKBody `json:"body,omitempty"`
}

// NewHealthCheckOK creates HealthCheckOK with default headers values
func NewHealthCheckOK() *HealthCheckOK {

	return &HealthCheckOK{}
}

// WithPayload adds the payload to the health check o k response
func (o *HealthCheckOK) WithPayload(payload *HealthCheckOKBody) *HealthCheckOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the health check o k response
func (o *HealthCheckOK) SetPayload(payload *HealthCheckOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HealthCheckOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *HealthCheckOK) HealthCheckResponder() {}

type HealthCheckNotImplementedResponder struct {
	middleware.Responder
}

func (*HealthCheckNotImplementedResponder) HealthCheckResponder() {}

func HealthCheckNotImplemented() HealthCheckResponder {
	return &HealthCheckNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.HealthCheck has not yet been implemented",
		),
	}
}

type HealthCheckResponder interface {
	middleware.Responder
	HealthCheckResponder()
}
