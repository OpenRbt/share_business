// Code generated by go-swagger; DO NOT EDIT.

package wash_server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"wash-bonus/openapi/models"
)

// GetWashServerOKCode is the HTTP code returned for type GetWashServerOK
const GetWashServerOKCode int = 200

/*
GetWashServerOK OK

swagger:response getWashServerOK
*/
type GetWashServerOK struct {

	/*
	  In: Body
	*/
	Payload *models.WashServer `json:"body,omitempty"`
}

// NewGetWashServerOK creates GetWashServerOK with default headers values
func NewGetWashServerOK() *GetWashServerOK {

	return &GetWashServerOK{}
}

// WithPayload adds the payload to the get wash server o k response
func (o *GetWashServerOK) WithPayload(payload *models.WashServer) *GetWashServerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash server o k response
func (o *GetWashServerOK) SetPayload(payload *models.WashServer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetWashServerDefault error

swagger:response getWashServerDefault
*/
type GetWashServerDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashServerDefault creates GetWashServerDefault with default headers values
func NewGetWashServerDefault(code int) *GetWashServerDefault {
	if code <= 0 {
		code = 500
	}

	return &GetWashServerDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get wash server default response
func (o *GetWashServerDefault) WithStatusCode(code int) *GetWashServerDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get wash server default response
func (o *GetWashServerDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get wash server default response
func (o *GetWashServerDefault) WithPayload(payload *models.Error) *GetWashServerDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash server default response
func (o *GetWashServerDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServerDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
