// Code generated by go-swagger; DO NOT EDIT.

package sessions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washBonus/openapi/models"
)

// ChargeBonusesOnSessionOKCode is the HTTP code returned for type ChargeBonusesOnSessionOK
const ChargeBonusesOnSessionOKCode int = 200

/*
ChargeBonusesOnSessionOK OK

swagger:response chargeBonusesOnSessionOK
*/
type ChargeBonusesOnSessionOK struct {

	/*
	  In: Body
	*/
	Payload *models.BonusCharge `json:"body,omitempty"`
}

// NewChargeBonusesOnSessionOK creates ChargeBonusesOnSessionOK with default headers values
func NewChargeBonusesOnSessionOK() *ChargeBonusesOnSessionOK {

	return &ChargeBonusesOnSessionOK{}
}

// WithPayload adds the payload to the charge bonuses on session o k response
func (o *ChargeBonusesOnSessionOK) WithPayload(payload *models.BonusCharge) *ChargeBonusesOnSessionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the charge bonuses on session o k response
func (o *ChargeBonusesOnSessionOK) SetPayload(payload *models.BonusCharge) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChargeBonusesOnSessionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ChargeBonusesOnSessionOK) ChargeBonusesOnSessionResponder() {}

// ChargeBonusesOnSessionForbiddenCode is the HTTP code returned for type ChargeBonusesOnSessionForbidden
const ChargeBonusesOnSessionForbiddenCode int = 403

/*
ChargeBonusesOnSessionForbidden Forbidden

swagger:response chargeBonusesOnSessionForbidden
*/
type ChargeBonusesOnSessionForbidden struct {
}

// NewChargeBonusesOnSessionForbidden creates ChargeBonusesOnSessionForbidden with default headers values
func NewChargeBonusesOnSessionForbidden() *ChargeBonusesOnSessionForbidden {

	return &ChargeBonusesOnSessionForbidden{}
}

// WriteResponse to the client
func (o *ChargeBonusesOnSessionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *ChargeBonusesOnSessionForbidden) ChargeBonusesOnSessionResponder() {}

// ChargeBonusesOnSessionNotFoundCode is the HTTP code returned for type ChargeBonusesOnSessionNotFound
const ChargeBonusesOnSessionNotFoundCode int = 404

/*
ChargeBonusesOnSessionNotFound Session not found

swagger:response chargeBonusesOnSessionNotFound
*/
type ChargeBonusesOnSessionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewChargeBonusesOnSessionNotFound creates ChargeBonusesOnSessionNotFound with default headers values
func NewChargeBonusesOnSessionNotFound() *ChargeBonusesOnSessionNotFound {

	return &ChargeBonusesOnSessionNotFound{}
}

// WithPayload adds the payload to the charge bonuses on session not found response
func (o *ChargeBonusesOnSessionNotFound) WithPayload(payload *models.Error) *ChargeBonusesOnSessionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the charge bonuses on session not found response
func (o *ChargeBonusesOnSessionNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChargeBonusesOnSessionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ChargeBonusesOnSessionNotFound) ChargeBonusesOnSessionResponder() {}

// ChargeBonusesOnSessionInternalServerErrorCode is the HTTP code returned for type ChargeBonusesOnSessionInternalServerError
const ChargeBonusesOnSessionInternalServerErrorCode int = 500

/*
ChargeBonusesOnSessionInternalServerError Internal error

swagger:response chargeBonusesOnSessionInternalServerError
*/
type ChargeBonusesOnSessionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewChargeBonusesOnSessionInternalServerError creates ChargeBonusesOnSessionInternalServerError with default headers values
func NewChargeBonusesOnSessionInternalServerError() *ChargeBonusesOnSessionInternalServerError {

	return &ChargeBonusesOnSessionInternalServerError{}
}

// WithPayload adds the payload to the charge bonuses on session internal server error response
func (o *ChargeBonusesOnSessionInternalServerError) WithPayload(payload *models.Error) *ChargeBonusesOnSessionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the charge bonuses on session internal server error response
func (o *ChargeBonusesOnSessionInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChargeBonusesOnSessionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ChargeBonusesOnSessionInternalServerError) ChargeBonusesOnSessionResponder() {}

type ChargeBonusesOnSessionNotImplementedResponder struct {
	middleware.Responder
}

func (*ChargeBonusesOnSessionNotImplementedResponder) ChargeBonusesOnSessionResponder() {}

func ChargeBonusesOnSessionNotImplemented() ChargeBonusesOnSessionResponder {
	return &ChargeBonusesOnSessionNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.ChargeBonusesOnSession has not yet been implemented",
		),
	}
}

type ChargeBonusesOnSessionResponder interface {
	middleware.Responder
	ChargeBonusesOnSessionResponder()
}
