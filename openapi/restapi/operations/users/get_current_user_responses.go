// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washBonus/openapi/models"
)

// GetCurrentUserOKCode is the HTTP code returned for type GetCurrentUserOK
const GetCurrentUserOKCode int = 200

/*
GetCurrentUserOK OK

swagger:response getCurrentUserOK
*/
type GetCurrentUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewGetCurrentUserOK creates GetCurrentUserOK with default headers values
func NewGetCurrentUserOK() *GetCurrentUserOK {

	return &GetCurrentUserOK{}
}

// WithPayload adds the payload to the get current user o k response
func (o *GetCurrentUserOK) WithPayload(payload *models.User) *GetCurrentUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get current user o k response
func (o *GetCurrentUserOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCurrentUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetCurrentUserOK) GetCurrentUserResponder() {}

// GetCurrentUserForbiddenCode is the HTTP code returned for type GetCurrentUserForbidden
const GetCurrentUserForbiddenCode int = 403

/*
GetCurrentUserForbidden Forbidden

swagger:response getCurrentUserForbidden
*/
type GetCurrentUserForbidden struct {
}

// NewGetCurrentUserForbidden creates GetCurrentUserForbidden with default headers values
func NewGetCurrentUserForbidden() *GetCurrentUserForbidden {

	return &GetCurrentUserForbidden{}
}

// WriteResponse to the client
func (o *GetCurrentUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *GetCurrentUserForbidden) GetCurrentUserResponder() {}

// GetCurrentUserNotFoundCode is the HTTP code returned for type GetCurrentUserNotFound
const GetCurrentUserNotFoundCode int = 404

/*
GetCurrentUserNotFound Not found

swagger:response getCurrentUserNotFound
*/
type GetCurrentUserNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCurrentUserNotFound creates GetCurrentUserNotFound with default headers values
func NewGetCurrentUserNotFound() *GetCurrentUserNotFound {

	return &GetCurrentUserNotFound{}
}

// WithPayload adds the payload to the get current user not found response
func (o *GetCurrentUserNotFound) WithPayload(payload *models.Error) *GetCurrentUserNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get current user not found response
func (o *GetCurrentUserNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCurrentUserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetCurrentUserNotFound) GetCurrentUserResponder() {}

// GetCurrentUserInternalServerErrorCode is the HTTP code returned for type GetCurrentUserInternalServerError
const GetCurrentUserInternalServerErrorCode int = 500

/*
GetCurrentUserInternalServerError Internal error

swagger:response getCurrentUserInternalServerError
*/
type GetCurrentUserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCurrentUserInternalServerError creates GetCurrentUserInternalServerError with default headers values
func NewGetCurrentUserInternalServerError() *GetCurrentUserInternalServerError {

	return &GetCurrentUserInternalServerError{}
}

// WithPayload adds the payload to the get current user internal server error response
func (o *GetCurrentUserInternalServerError) WithPayload(payload *models.Error) *GetCurrentUserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get current user internal server error response
func (o *GetCurrentUserInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCurrentUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetCurrentUserInternalServerError) GetCurrentUserResponder() {}

type GetCurrentUserNotImplementedResponder struct {
	middleware.Responder
}

func (*GetCurrentUserNotImplementedResponder) GetCurrentUserResponder() {}

func GetCurrentUserNotImplemented() GetCurrentUserResponder {
	return &GetCurrentUserNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetCurrentUser has not yet been implemented",
		),
	}
}

type GetCurrentUserResponder interface {
	middleware.Responder
	GetCurrentUserResponder()
}
