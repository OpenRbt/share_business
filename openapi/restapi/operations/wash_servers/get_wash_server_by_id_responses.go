// Code generated by go-swagger; DO NOT EDIT.

package wash_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washBonus/openapi/models"
)

// GetWashServerByIDOKCode is the HTTP code returned for type GetWashServerByIDOK
const GetWashServerByIDOKCode int = 200

/*
GetWashServerByIDOK OK

swagger:response getWashServerByIdOK
*/
type GetWashServerByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.WashServer `json:"body,omitempty"`
}

// NewGetWashServerByIDOK creates GetWashServerByIDOK with default headers values
func NewGetWashServerByIDOK() *GetWashServerByIDOK {

	return &GetWashServerByIDOK{}
}

// WithPayload adds the payload to the get wash server by Id o k response
func (o *GetWashServerByIDOK) WithPayload(payload *models.WashServer) *GetWashServerByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash server by Id o k response
func (o *GetWashServerByIDOK) SetPayload(payload *models.WashServer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServerByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServerByIDOK) GetWashServerByIDResponder() {}

// GetWashServerByIDBadRequestCode is the HTTP code returned for type GetWashServerByIDBadRequest
const GetWashServerByIDBadRequestCode int = 400

/*
GetWashServerByIDBadRequest Bad request

swagger:response getWashServerByIdBadRequest
*/
type GetWashServerByIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashServerByIDBadRequest creates GetWashServerByIDBadRequest with default headers values
func NewGetWashServerByIDBadRequest() *GetWashServerByIDBadRequest {

	return &GetWashServerByIDBadRequest{}
}

// WithPayload adds the payload to the get wash server by Id bad request response
func (o *GetWashServerByIDBadRequest) WithPayload(payload *models.Error) *GetWashServerByIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash server by Id bad request response
func (o *GetWashServerByIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServerByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServerByIDBadRequest) GetWashServerByIDResponder() {}

// GetWashServerByIDForbiddenCode is the HTTP code returned for type GetWashServerByIDForbidden
const GetWashServerByIDForbiddenCode int = 403

/*
GetWashServerByIDForbidden Forbidden

swagger:response getWashServerByIdForbidden
*/
type GetWashServerByIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashServerByIDForbidden creates GetWashServerByIDForbidden with default headers values
func NewGetWashServerByIDForbidden() *GetWashServerByIDForbidden {

	return &GetWashServerByIDForbidden{}
}

// WithPayload adds the payload to the get wash server by Id forbidden response
func (o *GetWashServerByIDForbidden) WithPayload(payload *models.Error) *GetWashServerByIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash server by Id forbidden response
func (o *GetWashServerByIDForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServerByIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServerByIDForbidden) GetWashServerByIDResponder() {}

// GetWashServerByIDNotFoundCode is the HTTP code returned for type GetWashServerByIDNotFound
const GetWashServerByIDNotFoundCode int = 404

/*
GetWashServerByIDNotFound WashServer not exists

swagger:response getWashServerByIdNotFound
*/
type GetWashServerByIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashServerByIDNotFound creates GetWashServerByIDNotFound with default headers values
func NewGetWashServerByIDNotFound() *GetWashServerByIDNotFound {

	return &GetWashServerByIDNotFound{}
}

// WithPayload adds the payload to the get wash server by Id not found response
func (o *GetWashServerByIDNotFound) WithPayload(payload *models.Error) *GetWashServerByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash server by Id not found response
func (o *GetWashServerByIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServerByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServerByIDNotFound) GetWashServerByIDResponder() {}

// GetWashServerByIDInternalServerErrorCode is the HTTP code returned for type GetWashServerByIDInternalServerError
const GetWashServerByIDInternalServerErrorCode int = 500

/*
GetWashServerByIDInternalServerError Internal error

swagger:response getWashServerByIdInternalServerError
*/
type GetWashServerByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashServerByIDInternalServerError creates GetWashServerByIDInternalServerError with default headers values
func NewGetWashServerByIDInternalServerError() *GetWashServerByIDInternalServerError {

	return &GetWashServerByIDInternalServerError{}
}

// WithPayload adds the payload to the get wash server by Id internal server error response
func (o *GetWashServerByIDInternalServerError) WithPayload(payload *models.Error) *GetWashServerByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash server by Id internal server error response
func (o *GetWashServerByIDInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServerByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServerByIDInternalServerError) GetWashServerByIDResponder() {}

type GetWashServerByIDNotImplementedResponder struct {
	middleware.Responder
}

func (*GetWashServerByIDNotImplementedResponder) GetWashServerByIDResponder() {}

func GetWashServerByIDNotImplemented() GetWashServerByIDResponder {
	return &GetWashServerByIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetWashServerByID has not yet been implemented",
		),
	}
}

type GetWashServerByIDResponder interface {
	middleware.Responder
	GetWashServerByIDResponder()
}
