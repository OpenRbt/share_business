// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// WashServer wash server
//
// swagger:model WashServer
type WashServer struct {

	// created by
	CreatedBy string `json:"createdBy,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// service key
	ServiceKey string `json:"serviceKey,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *WashServer) UnmarshalJSON(data []byte) error {
	var props struct {

		// created by
		CreatedBy string `json:"createdBy,omitempty"`

		// description
		Description string `json:"description,omitempty"`

		// id
		ID string `json:"id,omitempty"`

		// name
		Name string `json:"name,omitempty"`

		// service key
		ServiceKey string `json:"serviceKey,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.CreatedBy = props.CreatedBy
	m.Description = props.Description
	m.ID = props.ID
	m.Name = props.Name
	m.ServiceKey = props.ServiceKey
	return nil
}

// Validate validates this wash server
func (m *WashServer) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this wash server based on context it is used
func (m *WashServer) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WashServer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WashServer) UnmarshalBinary(b []byte) error {
	var res WashServer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
