// Code generated by go-swagger; DO NOT EDIT.

package wallets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washbonus/openapi/bonus/models"
)

// GetWalletsOKCode is the HTTP code returned for type GetWalletsOK
const GetWalletsOKCode int = 200

/*
GetWalletsOK OK

swagger:response getWalletsOK
*/
type GetWalletsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Wallet `json:"body,omitempty"`
}

// NewGetWalletsOK creates GetWalletsOK with default headers values
func NewGetWalletsOK() *GetWalletsOK {

	return &GetWalletsOK{}
}

// WithPayload adds the payload to the get wallets o k response
func (o *GetWalletsOK) WithPayload(payload []*models.Wallet) *GetWalletsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wallets o k response
func (o *GetWalletsOK) SetPayload(payload []*models.Wallet) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWalletsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Wallet, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetWalletsOK) GetWalletsResponder() {}

/*
GetWalletsDefault Generic error response

swagger:response getWalletsDefault
*/
type GetWalletsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWalletsDefault creates GetWalletsDefault with default headers values
func NewGetWalletsDefault(code int) *GetWalletsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetWalletsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get wallets default response
func (o *GetWalletsDefault) WithStatusCode(code int) *GetWalletsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get wallets default response
func (o *GetWalletsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get wallets default response
func (o *GetWalletsDefault) WithPayload(payload *models.Error) *GetWalletsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wallets default response
func (o *GetWalletsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWalletsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWalletsDefault) GetWalletsResponder() {}

type GetWalletsNotImplementedResponder struct {
	middleware.Responder
}

func (*GetWalletsNotImplementedResponder) GetWalletsResponder() {}

func GetWalletsNotImplemented() GetWalletsResponder {
	return &GetWalletsNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetWallets has not yet been implemented",
		),
	}
}

type GetWalletsResponder interface {
	middleware.Responder
	GetWalletsResponder()
}
