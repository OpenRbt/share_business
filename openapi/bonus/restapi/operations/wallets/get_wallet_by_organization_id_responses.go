// Code generated by go-swagger; DO NOT EDIT.

package wallets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washbonus/openapi/bonus/models"
)

// GetWalletByOrganizationIDOKCode is the HTTP code returned for type GetWalletByOrganizationIDOK
const GetWalletByOrganizationIDOKCode int = 200

/*
GetWalletByOrganizationIDOK OK

swagger:response getWalletByOrganizationIdOK
*/
type GetWalletByOrganizationIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Wallet `json:"body,omitempty"`
}

// NewGetWalletByOrganizationIDOK creates GetWalletByOrganizationIDOK with default headers values
func NewGetWalletByOrganizationIDOK() *GetWalletByOrganizationIDOK {

	return &GetWalletByOrganizationIDOK{}
}

// WithPayload adds the payload to the get wallet by organization Id o k response
func (o *GetWalletByOrganizationIDOK) WithPayload(payload *models.Wallet) *GetWalletByOrganizationIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wallet by organization Id o k response
func (o *GetWalletByOrganizationIDOK) SetPayload(payload *models.Wallet) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWalletByOrganizationIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWalletByOrganizationIDOK) GetWalletByOrganizationIDResponder() {}

/*
GetWalletByOrganizationIDDefault Generic error response

swagger:response getWalletByOrganizationIdDefault
*/
type GetWalletByOrganizationIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWalletByOrganizationIDDefault creates GetWalletByOrganizationIDDefault with default headers values
func NewGetWalletByOrganizationIDDefault(code int) *GetWalletByOrganizationIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetWalletByOrganizationIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get wallet by organization Id default response
func (o *GetWalletByOrganizationIDDefault) WithStatusCode(code int) *GetWalletByOrganizationIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get wallet by organization Id default response
func (o *GetWalletByOrganizationIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get wallet by organization Id default response
func (o *GetWalletByOrganizationIDDefault) WithPayload(payload *models.Error) *GetWalletByOrganizationIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wallet by organization Id default response
func (o *GetWalletByOrganizationIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWalletByOrganizationIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWalletByOrganizationIDDefault) GetWalletByOrganizationIDResponder() {}

type GetWalletByOrganizationIDNotImplementedResponder struct {
	middleware.Responder
}

func (*GetWalletByOrganizationIDNotImplementedResponder) GetWalletByOrganizationIDResponder() {}

func GetWalletByOrganizationIDNotImplemented() GetWalletByOrganizationIDResponder {
	return &GetWalletByOrganizationIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetWalletByOrganizationID has not yet been implemented",
		),
	}
}

type GetWalletByOrganizationIDResponder interface {
	middleware.Responder
	GetWalletByOrganizationIDResponder()
}
