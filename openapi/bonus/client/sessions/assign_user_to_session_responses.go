// Code generated by go-swagger; DO NOT EDIT.

package sessions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"washbonus/openapi/bonus/models"
)

// AssignUserToSessionReader is a Reader for the AssignUserToSession structure.
type AssignUserToSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AssignUserToSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAssignUserToSessionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAssignUserToSessionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAssignUserToSessionNoContent creates a AssignUserToSessionNoContent with default headers values
func NewAssignUserToSessionNoContent() *AssignUserToSessionNoContent {
	return &AssignUserToSessionNoContent{}
}

/*
AssignUserToSessionNoContent describes a response with status code 204, with default header values.

OK
*/
type AssignUserToSessionNoContent struct {
}

// IsSuccess returns true when this assign user to session no content response has a 2xx status code
func (o *AssignUserToSessionNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this assign user to session no content response has a 3xx status code
func (o *AssignUserToSessionNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this assign user to session no content response has a 4xx status code
func (o *AssignUserToSessionNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this assign user to session no content response has a 5xx status code
func (o *AssignUserToSessionNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this assign user to session no content response a status code equal to that given
func (o *AssignUserToSessionNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the assign user to session no content response
func (o *AssignUserToSessionNoContent) Code() int {
	return 204
}

func (o *AssignUserToSessionNoContent) Error() string {
	return fmt.Sprintf("[POST /sessions/{sessionId}/assign-user][%d] assignUserToSessionNoContent ", 204)
}

func (o *AssignUserToSessionNoContent) String() string {
	return fmt.Sprintf("[POST /sessions/{sessionId}/assign-user][%d] assignUserToSessionNoContent ", 204)
}

func (o *AssignUserToSessionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAssignUserToSessionDefault creates a AssignUserToSessionDefault with default headers values
func NewAssignUserToSessionDefault(code int) *AssignUserToSessionDefault {
	return &AssignUserToSessionDefault{
		_statusCode: code,
	}
}

/*
AssignUserToSessionDefault describes a response with status code -1, with default header values.

Generic error response
*/
type AssignUserToSessionDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this assign user to session default response has a 2xx status code
func (o *AssignUserToSessionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this assign user to session default response has a 3xx status code
func (o *AssignUserToSessionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this assign user to session default response has a 4xx status code
func (o *AssignUserToSessionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this assign user to session default response has a 5xx status code
func (o *AssignUserToSessionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this assign user to session default response a status code equal to that given
func (o *AssignUserToSessionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the assign user to session default response
func (o *AssignUserToSessionDefault) Code() int {
	return o._statusCode
}

func (o *AssignUserToSessionDefault) Error() string {
	return fmt.Sprintf("[POST /sessions/{sessionId}/assign-user][%d] assignUserToSession default  %+v", o._statusCode, o.Payload)
}

func (o *AssignUserToSessionDefault) String() string {
	return fmt.Sprintf("[POST /sessions/{sessionId}/assign-user][%d] assignUserToSession default  %+v", o._statusCode, o.Payload)
}

func (o *AssignUserToSessionDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *AssignUserToSessionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
