// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"washbonus/openapi/admin/models"
)

// GetAdminApplicationsReader is a Reader for the GetAdminApplications structure.
type GetAdminApplicationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAdminApplicationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAdminApplicationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetAdminApplicationsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetAdminApplicationsOK creates a GetAdminApplicationsOK with default headers values
func NewGetAdminApplicationsOK() *GetAdminApplicationsOK {
	return &GetAdminApplicationsOK{}
}

/*
GetAdminApplicationsOK describes a response with status code 200, with default header values.

OK
*/
type GetAdminApplicationsOK struct {
	Payload *GetAdminApplicationsOKBody
}

// IsSuccess returns true when this get admin applications o k response has a 2xx status code
func (o *GetAdminApplicationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get admin applications o k response has a 3xx status code
func (o *GetAdminApplicationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get admin applications o k response has a 4xx status code
func (o *GetAdminApplicationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get admin applications o k response has a 5xx status code
func (o *GetAdminApplicationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get admin applications o k response a status code equal to that given
func (o *GetAdminApplicationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get admin applications o k response
func (o *GetAdminApplicationsOK) Code() int {
	return 200
}

func (o *GetAdminApplicationsOK) Error() string {
	return fmt.Sprintf("[GET /users/applications][%d] getAdminApplicationsOK  %+v", 200, o.Payload)
}

func (o *GetAdminApplicationsOK) String() string {
	return fmt.Sprintf("[GET /users/applications][%d] getAdminApplicationsOK  %+v", 200, o.Payload)
}

func (o *GetAdminApplicationsOK) GetPayload() *GetAdminApplicationsOKBody {
	return o.Payload
}

func (o *GetAdminApplicationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAdminApplicationsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAdminApplicationsDefault creates a GetAdminApplicationsDefault with default headers values
func NewGetAdminApplicationsDefault(code int) *GetAdminApplicationsDefault {
	return &GetAdminApplicationsDefault{
		_statusCode: code,
	}
}

/*
GetAdminApplicationsDefault describes a response with status code -1, with default header values.

Generic error response
*/
type GetAdminApplicationsDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get admin applications default response has a 2xx status code
func (o *GetAdminApplicationsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get admin applications default response has a 3xx status code
func (o *GetAdminApplicationsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get admin applications default response has a 4xx status code
func (o *GetAdminApplicationsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get admin applications default response has a 5xx status code
func (o *GetAdminApplicationsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get admin applications default response a status code equal to that given
func (o *GetAdminApplicationsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get admin applications default response
func (o *GetAdminApplicationsDefault) Code() int {
	return o._statusCode
}

func (o *GetAdminApplicationsDefault) Error() string {
	return fmt.Sprintf("[GET /users/applications][%d] getAdminApplications default  %+v", o._statusCode, o.Payload)
}

func (o *GetAdminApplicationsDefault) String() string {
	return fmt.Sprintf("[GET /users/applications][%d] getAdminApplications default  %+v", o._statusCode, o.Payload)
}

func (o *GetAdminApplicationsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAdminApplicationsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetAdminApplicationsOKBody get admin applications o k body
swagger:model GetAdminApplicationsOKBody
*/
type GetAdminApplicationsOKBody struct {

	// applications
	Applications []*models.AdminApplication `json:"applications"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *GetAdminApplicationsOKBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// applications
		Applications []*models.AdminApplication `json:"applications"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.Applications = props.Applications
	return nil
}

// Validate validates this get admin applications o k body
func (o *GetAdminApplicationsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateApplications(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAdminApplicationsOKBody) validateApplications(formats strfmt.Registry) error {
	if swag.IsZero(o.Applications) { // not required
		return nil
	}

	for i := 0; i < len(o.Applications); i++ {
		if swag.IsZero(o.Applications[i]) { // not required
			continue
		}

		if o.Applications[i] != nil {
			if err := o.Applications[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAdminApplicationsOK" + "." + "applications" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getAdminApplicationsOK" + "." + "applications" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get admin applications o k body based on the context it is used
func (o *GetAdminApplicationsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateApplications(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAdminApplicationsOKBody) contextValidateApplications(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Applications); i++ {

		if o.Applications[i] != nil {

			if swag.IsZero(o.Applications[i]) { // not required
				return nil
			}

			if err := o.Applications[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAdminApplicationsOK" + "." + "applications" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getAdminApplicationsOK" + "." + "applications" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAdminApplicationsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAdminApplicationsOKBody) UnmarshalBinary(b []byte) error {
	var res GetAdminApplicationsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
