// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"washbonus/openapi/admin/models"
)

// UpdateAdminUserRoleReader is a Reader for the UpdateAdminUserRole structure.
type UpdateAdminUserRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAdminUserRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateAdminUserRoleNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateAdminUserRoleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateAdminUserRoleNoContent creates a UpdateAdminUserRoleNoContent with default headers values
func NewUpdateAdminUserRoleNoContent() *UpdateAdminUserRoleNoContent {
	return &UpdateAdminUserRoleNoContent{}
}

/*
UpdateAdminUserRoleNoContent describes a response with status code 204, with default header values.

OK
*/
type UpdateAdminUserRoleNoContent struct {
}

// IsSuccess returns true when this update admin user role no content response has a 2xx status code
func (o *UpdateAdminUserRoleNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update admin user role no content response has a 3xx status code
func (o *UpdateAdminUserRoleNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update admin user role no content response has a 4xx status code
func (o *UpdateAdminUserRoleNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update admin user role no content response has a 5xx status code
func (o *UpdateAdminUserRoleNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update admin user role no content response a status code equal to that given
func (o *UpdateAdminUserRoleNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update admin user role no content response
func (o *UpdateAdminUserRoleNoContent) Code() int {
	return 204
}

func (o *UpdateAdminUserRoleNoContent) Error() string {
	return fmt.Sprintf("[PATCH /users/{userId}][%d] updateAdminUserRoleNoContent ", 204)
}

func (o *UpdateAdminUserRoleNoContent) String() string {
	return fmt.Sprintf("[PATCH /users/{userId}][%d] updateAdminUserRoleNoContent ", 204)
}

func (o *UpdateAdminUserRoleNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAdminUserRoleDefault creates a UpdateAdminUserRoleDefault with default headers values
func NewUpdateAdminUserRoleDefault(code int) *UpdateAdminUserRoleDefault {
	return &UpdateAdminUserRoleDefault{
		_statusCode: code,
	}
}

/*
UpdateAdminUserRoleDefault describes a response with status code -1, with default header values.

Generic error response
*/
type UpdateAdminUserRoleDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this update admin user role default response has a 2xx status code
func (o *UpdateAdminUserRoleDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update admin user role default response has a 3xx status code
func (o *UpdateAdminUserRoleDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update admin user role default response has a 4xx status code
func (o *UpdateAdminUserRoleDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update admin user role default response has a 5xx status code
func (o *UpdateAdminUserRoleDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update admin user role default response a status code equal to that given
func (o *UpdateAdminUserRoleDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update admin user role default response
func (o *UpdateAdminUserRoleDefault) Code() int {
	return o._statusCode
}

func (o *UpdateAdminUserRoleDefault) Error() string {
	return fmt.Sprintf("[PATCH /users/{userId}][%d] updateAdminUserRole default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateAdminUserRoleDefault) String() string {
	return fmt.Sprintf("[PATCH /users/{userId}][%d] updateAdminUserRole default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateAdminUserRoleDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateAdminUserRoleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
UpdateAdminUserRoleBody update admin user role body
swagger:model UpdateAdminUserRoleBody
*/
type UpdateAdminUserRoleBody struct {

	// role
	Role models.AdminUserRole `json:"role,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *UpdateAdminUserRoleBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// role
		Role models.AdminUserRole `json:"role,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.Role = props.Role
	return nil
}

// Validate validates this update admin user role body
func (o *UpdateAdminUserRoleBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateAdminUserRoleBody) validateRole(formats strfmt.Registry) error {
	if swag.IsZero(o.Role) { // not required
		return nil
	}

	if err := o.Role.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("body" + "." + "role")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("body" + "." + "role")
		}
		return err
	}

	return nil
}

// ContextValidate validate this update admin user role body based on the context it is used
func (o *UpdateAdminUserRoleBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateRole(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateAdminUserRoleBody) contextValidateRole(ctx context.Context, formats strfmt.Registry) error {

	if swag.IsZero(o.Role) { // not required
		return nil
	}

	if err := o.Role.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("body" + "." + "role")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("body" + "." + "role")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateAdminUserRoleBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateAdminUserRoleBody) UnmarshalBinary(b []byte) error {
	var res UpdateAdminUserRoleBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
