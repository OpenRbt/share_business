// Code generated by go-swagger; DO NOT EDIT.

package wash_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"washbonus/openapi/admin/models"
)

// UpdateWashServerReader is a Reader for the UpdateWashServer structure.
type UpdateWashServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateWashServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateWashServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateWashServerDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateWashServerOK creates a UpdateWashServerOK with default headers values
func NewUpdateWashServerOK() *UpdateWashServerOK {
	return &UpdateWashServerOK{}
}

/*
UpdateWashServerOK describes a response with status code 200, with default header values.

Success update
*/
type UpdateWashServerOK struct {
	Payload *models.WashServer
}

// IsSuccess returns true when this update wash server o k response has a 2xx status code
func (o *UpdateWashServerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update wash server o k response has a 3xx status code
func (o *UpdateWashServerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update wash server o k response has a 4xx status code
func (o *UpdateWashServerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update wash server o k response has a 5xx status code
func (o *UpdateWashServerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update wash server o k response a status code equal to that given
func (o *UpdateWashServerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update wash server o k response
func (o *UpdateWashServerOK) Code() int {
	return 200
}

func (o *UpdateWashServerOK) Error() string {
	return fmt.Sprintf("[PATCH /wash-servers/{serverId}][%d] updateWashServerOK  %+v", 200, o.Payload)
}

func (o *UpdateWashServerOK) String() string {
	return fmt.Sprintf("[PATCH /wash-servers/{serverId}][%d] updateWashServerOK  %+v", 200, o.Payload)
}

func (o *UpdateWashServerOK) GetPayload() *models.WashServer {
	return o.Payload
}

func (o *UpdateWashServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WashServer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateWashServerDefault creates a UpdateWashServerDefault with default headers values
func NewUpdateWashServerDefault(code int) *UpdateWashServerDefault {
	return &UpdateWashServerDefault{
		_statusCode: code,
	}
}

/*
UpdateWashServerDefault describes a response with status code -1, with default header values.

Generic error response
*/
type UpdateWashServerDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this update wash server default response has a 2xx status code
func (o *UpdateWashServerDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update wash server default response has a 3xx status code
func (o *UpdateWashServerDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update wash server default response has a 4xx status code
func (o *UpdateWashServerDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update wash server default response has a 5xx status code
func (o *UpdateWashServerDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update wash server default response a status code equal to that given
func (o *UpdateWashServerDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update wash server default response
func (o *UpdateWashServerDefault) Code() int {
	return o._statusCode
}

func (o *UpdateWashServerDefault) Error() string {
	return fmt.Sprintf("[PATCH /wash-servers/{serverId}][%d] updateWashServer default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateWashServerDefault) String() string {
	return fmt.Sprintf("[PATCH /wash-servers/{serverId}][%d] updateWashServer default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateWashServerDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateWashServerDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
