// Code generated by go-swagger; DO NOT EDIT.

package wash_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"washbonus/openapi/admin/models"
)

// GetWashServerByIDReader is a Reader for the GetWashServerByID structure.
type GetWashServerByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWashServerByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWashServerByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetWashServerByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetWashServerByIDOK creates a GetWashServerByIDOK with default headers values
func NewGetWashServerByIDOK() *GetWashServerByIDOK {
	return &GetWashServerByIDOK{}
}

/*
GetWashServerByIDOK describes a response with status code 200, with default header values.

OK
*/
type GetWashServerByIDOK struct {
	Payload *models.WashServer
}

// IsSuccess returns true when this get wash server by Id o k response has a 2xx status code
func (o *GetWashServerByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get wash server by Id o k response has a 3xx status code
func (o *GetWashServerByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wash server by Id o k response has a 4xx status code
func (o *GetWashServerByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get wash server by Id o k response has a 5xx status code
func (o *GetWashServerByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get wash server by Id o k response a status code equal to that given
func (o *GetWashServerByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get wash server by Id o k response
func (o *GetWashServerByIDOK) Code() int {
	return 200
}

func (o *GetWashServerByIDOK) Error() string {
	return fmt.Sprintf("[GET /wash-servers/{serverId}][%d] getWashServerByIdOK  %+v", 200, o.Payload)
}

func (o *GetWashServerByIDOK) String() string {
	return fmt.Sprintf("[GET /wash-servers/{serverId}][%d] getWashServerByIdOK  %+v", 200, o.Payload)
}

func (o *GetWashServerByIDOK) GetPayload() *models.WashServer {
	return o.Payload
}

func (o *GetWashServerByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WashServer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWashServerByIDDefault creates a GetWashServerByIDDefault with default headers values
func NewGetWashServerByIDDefault(code int) *GetWashServerByIDDefault {
	return &GetWashServerByIDDefault{
		_statusCode: code,
	}
}

/*
GetWashServerByIDDefault describes a response with status code -1, with default header values.

Generic error response
*/
type GetWashServerByIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get wash server by Id default response has a 2xx status code
func (o *GetWashServerByIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get wash server by Id default response has a 3xx status code
func (o *GetWashServerByIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get wash server by Id default response has a 4xx status code
func (o *GetWashServerByIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get wash server by Id default response has a 5xx status code
func (o *GetWashServerByIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get wash server by Id default response a status code equal to that given
func (o *GetWashServerByIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get wash server by Id default response
func (o *GetWashServerByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetWashServerByIDDefault) Error() string {
	return fmt.Sprintf("[GET /wash-servers/{serverId}][%d] getWashServerById default  %+v", o._statusCode, o.Payload)
}

func (o *GetWashServerByIDDefault) String() string {
	return fmt.Sprintf("[GET /wash-servers/{serverId}][%d] getWashServerById default  %+v", o._statusCode, o.Payload)
}

func (o *GetWashServerByIDDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWashServerByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
