// Code generated by go-swagger; DO NOT EDIT.

package wash_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"washbonus/openapi/admin/models"
)

// AssignServerToGroupReader is a Reader for the AssignServerToGroup structure.
type AssignServerToGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AssignServerToGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAssignServerToGroupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAssignServerToGroupDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAssignServerToGroupNoContent creates a AssignServerToGroupNoContent with default headers values
func NewAssignServerToGroupNoContent() *AssignServerToGroupNoContent {
	return &AssignServerToGroupNoContent{}
}

/*
AssignServerToGroupNoContent describes a response with status code 204, with default header values.

OK
*/
type AssignServerToGroupNoContent struct {
}

// IsSuccess returns true when this assign server to group no content response has a 2xx status code
func (o *AssignServerToGroupNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this assign server to group no content response has a 3xx status code
func (o *AssignServerToGroupNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this assign server to group no content response has a 4xx status code
func (o *AssignServerToGroupNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this assign server to group no content response has a 5xx status code
func (o *AssignServerToGroupNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this assign server to group no content response a status code equal to that given
func (o *AssignServerToGroupNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the assign server to group no content response
func (o *AssignServerToGroupNoContent) Code() int {
	return 204
}

func (o *AssignServerToGroupNoContent) Error() string {
	return fmt.Sprintf("[POST /server-groups/{groupId}/wash-servers/{serverId}][%d] assignServerToGroupNoContent ", 204)
}

func (o *AssignServerToGroupNoContent) String() string {
	return fmt.Sprintf("[POST /server-groups/{groupId}/wash-servers/{serverId}][%d] assignServerToGroupNoContent ", 204)
}

func (o *AssignServerToGroupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAssignServerToGroupDefault creates a AssignServerToGroupDefault with default headers values
func NewAssignServerToGroupDefault(code int) *AssignServerToGroupDefault {
	return &AssignServerToGroupDefault{
		_statusCode: code,
	}
}

/*
AssignServerToGroupDefault describes a response with status code -1, with default header values.

Generic error response
*/
type AssignServerToGroupDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this assign server to group default response has a 2xx status code
func (o *AssignServerToGroupDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this assign server to group default response has a 3xx status code
func (o *AssignServerToGroupDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this assign server to group default response has a 4xx status code
func (o *AssignServerToGroupDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this assign server to group default response has a 5xx status code
func (o *AssignServerToGroupDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this assign server to group default response a status code equal to that given
func (o *AssignServerToGroupDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the assign server to group default response
func (o *AssignServerToGroupDefault) Code() int {
	return o._statusCode
}

func (o *AssignServerToGroupDefault) Error() string {
	return fmt.Sprintf("[POST /server-groups/{groupId}/wash-servers/{serverId}][%d] assignServerToGroup default  %+v", o._statusCode, o.Payload)
}

func (o *AssignServerToGroupDefault) String() string {
	return fmt.Sprintf("[POST /server-groups/{groupId}/wash-servers/{serverId}][%d] assignServerToGroup default  %+v", o._statusCode, o.Payload)
}

func (o *AssignServerToGroupDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *AssignServerToGroupDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
