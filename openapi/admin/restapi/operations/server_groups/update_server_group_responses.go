// Code generated by go-swagger; DO NOT EDIT.

package server_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washbonus/openapi/admin/models"
)

// UpdateServerGroupOKCode is the HTTP code returned for type UpdateServerGroupOK
const UpdateServerGroupOKCode int = 200

/*
UpdateServerGroupOK Successfull updated

swagger:response updateServerGroupOK
*/
type UpdateServerGroupOK struct {

	/*
	  In: Body
	*/
	Payload *models.ServerGroup `json:"body,omitempty"`
}

// NewUpdateServerGroupOK creates UpdateServerGroupOK with default headers values
func NewUpdateServerGroupOK() *UpdateServerGroupOK {

	return &UpdateServerGroupOK{}
}

// WithPayload adds the payload to the update server group o k response
func (o *UpdateServerGroupOK) WithPayload(payload *models.ServerGroup) *UpdateServerGroupOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update server group o k response
func (o *UpdateServerGroupOK) SetPayload(payload *models.ServerGroup) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServerGroupOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UpdateServerGroupOK) UpdateServerGroupResponder() {}

/*
UpdateServerGroupDefault Generic error response

swagger:response updateServerGroupDefault
*/
type UpdateServerGroupDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateServerGroupDefault creates UpdateServerGroupDefault with default headers values
func NewUpdateServerGroupDefault(code int) *UpdateServerGroupDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateServerGroupDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update server group default response
func (o *UpdateServerGroupDefault) WithStatusCode(code int) *UpdateServerGroupDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update server group default response
func (o *UpdateServerGroupDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update server group default response
func (o *UpdateServerGroupDefault) WithPayload(payload *models.Error) *UpdateServerGroupDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update server group default response
func (o *UpdateServerGroupDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServerGroupDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UpdateServerGroupDefault) UpdateServerGroupResponder() {}

type UpdateServerGroupNotImplementedResponder struct {
	middleware.Responder
}

func (*UpdateServerGroupNotImplementedResponder) UpdateServerGroupResponder() {}

func UpdateServerGroupNotImplemented() UpdateServerGroupResponder {
	return &UpdateServerGroupNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.UpdateServerGroup has not yet been implemented",
		),
	}
}

type UpdateServerGroupResponder interface {
	middleware.Responder
	UpdateServerGroupResponder()
}
