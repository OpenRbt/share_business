// Code generated by go-swagger; DO NOT EDIT.

package server_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washbonus/openapi/admin/models"
)

// GetServerGroupByIDOKCode is the HTTP code returned for type GetServerGroupByIDOK
const GetServerGroupByIDOKCode int = 200

/*
GetServerGroupByIDOK OK

swagger:response getServerGroupByIdOK
*/
type GetServerGroupByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ServerGroup `json:"body,omitempty"`
}

// NewGetServerGroupByIDOK creates GetServerGroupByIDOK with default headers values
func NewGetServerGroupByIDOK() *GetServerGroupByIDOK {

	return &GetServerGroupByIDOK{}
}

// WithPayload adds the payload to the get server group by Id o k response
func (o *GetServerGroupByIDOK) WithPayload(payload *models.ServerGroup) *GetServerGroupByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get server group by Id o k response
func (o *GetServerGroupByIDOK) SetPayload(payload *models.ServerGroup) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServerGroupByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetServerGroupByIDOK) GetServerGroupByIDResponder() {}

/*
GetServerGroupByIDDefault Generic error response

swagger:response getServerGroupByIdDefault
*/
type GetServerGroupByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServerGroupByIDDefault creates GetServerGroupByIDDefault with default headers values
func NewGetServerGroupByIDDefault(code int) *GetServerGroupByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetServerGroupByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get server group by Id default response
func (o *GetServerGroupByIDDefault) WithStatusCode(code int) *GetServerGroupByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get server group by Id default response
func (o *GetServerGroupByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get server group by Id default response
func (o *GetServerGroupByIDDefault) WithPayload(payload *models.Error) *GetServerGroupByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get server group by Id default response
func (o *GetServerGroupByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServerGroupByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetServerGroupByIDDefault) GetServerGroupByIDResponder() {}

type GetServerGroupByIDNotImplementedResponder struct {
	middleware.Responder
}

func (*GetServerGroupByIDNotImplementedResponder) GetServerGroupByIDResponder() {}

func GetServerGroupByIDNotImplemented() GetServerGroupByIDResponder {
	return &GetServerGroupByIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetServerGroupByID has not yet been implemented",
		),
	}
}

type GetServerGroupByIDResponder interface {
	middleware.Responder
	GetServerGroupByIDResponder()
}
