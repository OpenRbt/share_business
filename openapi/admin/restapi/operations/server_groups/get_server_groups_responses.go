// Code generated by go-swagger; DO NOT EDIT.

package server_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washbonus/openapi/admin/models"
)

// GetServerGroupsOKCode is the HTTP code returned for type GetServerGroupsOK
const GetServerGroupsOKCode int = 200

/*
GetServerGroupsOK OK

swagger:response getServerGroupsOK
*/
type GetServerGroupsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ServerGroup `json:"body,omitempty"`
}

// NewGetServerGroupsOK creates GetServerGroupsOK with default headers values
func NewGetServerGroupsOK() *GetServerGroupsOK {

	return &GetServerGroupsOK{}
}

// WithPayload adds the payload to the get server groups o k response
func (o *GetServerGroupsOK) WithPayload(payload []*models.ServerGroup) *GetServerGroupsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get server groups o k response
func (o *GetServerGroupsOK) SetPayload(payload []*models.ServerGroup) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServerGroupsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ServerGroup, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetServerGroupsOK) GetServerGroupsResponder() {}

/*
GetServerGroupsDefault Generic error response

swagger:response getServerGroupsDefault
*/
type GetServerGroupsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServerGroupsDefault creates GetServerGroupsDefault with default headers values
func NewGetServerGroupsDefault(code int) *GetServerGroupsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetServerGroupsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get server groups default response
func (o *GetServerGroupsDefault) WithStatusCode(code int) *GetServerGroupsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get server groups default response
func (o *GetServerGroupsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get server groups default response
func (o *GetServerGroupsDefault) WithPayload(payload *models.Error) *GetServerGroupsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get server groups default response
func (o *GetServerGroupsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServerGroupsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetServerGroupsDefault) GetServerGroupsResponder() {}

type GetServerGroupsNotImplementedResponder struct {
	middleware.Responder
}

func (*GetServerGroupsNotImplementedResponder) GetServerGroupsResponder() {}

func GetServerGroupsNotImplemented() GetServerGroupsResponder {
	return &GetServerGroupsNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetServerGroups has not yet been implemented",
		),
	}
}

type GetServerGroupsResponder interface {
	middleware.Responder
	GetServerGroupsResponder()
}
