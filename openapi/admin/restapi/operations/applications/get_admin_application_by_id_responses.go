// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washbonus/openapi/admin/models"
)

// GetAdminApplicationByIDOKCode is the HTTP code returned for type GetAdminApplicationByIDOK
const GetAdminApplicationByIDOKCode int = 200

/*
GetAdminApplicationByIDOK OK

swagger:response getAdminApplicationByIdOK
*/
type GetAdminApplicationByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.AdminApplication `json:"body,omitempty"`
}

// NewGetAdminApplicationByIDOK creates GetAdminApplicationByIDOK with default headers values
func NewGetAdminApplicationByIDOK() *GetAdminApplicationByIDOK {

	return &GetAdminApplicationByIDOK{}
}

// WithPayload adds the payload to the get admin application by Id o k response
func (o *GetAdminApplicationByIDOK) WithPayload(payload *models.AdminApplication) *GetAdminApplicationByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get admin application by Id o k response
func (o *GetAdminApplicationByIDOK) SetPayload(payload *models.AdminApplication) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAdminApplicationByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetAdminApplicationByIDOK) GetAdminApplicationByIDResponder() {}

/*
GetAdminApplicationByIDDefault Generic error response

swagger:response getAdminApplicationByIdDefault
*/
type GetAdminApplicationByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAdminApplicationByIDDefault creates GetAdminApplicationByIDDefault with default headers values
func NewGetAdminApplicationByIDDefault(code int) *GetAdminApplicationByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetAdminApplicationByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get admin application by Id default response
func (o *GetAdminApplicationByIDDefault) WithStatusCode(code int) *GetAdminApplicationByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get admin application by Id default response
func (o *GetAdminApplicationByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get admin application by Id default response
func (o *GetAdminApplicationByIDDefault) WithPayload(payload *models.Error) *GetAdminApplicationByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get admin application by Id default response
func (o *GetAdminApplicationByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAdminApplicationByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetAdminApplicationByIDDefault) GetAdminApplicationByIDResponder() {}

type GetAdminApplicationByIDNotImplementedResponder struct {
	middleware.Responder
}

func (*GetAdminApplicationByIDNotImplementedResponder) GetAdminApplicationByIDResponder() {}

func GetAdminApplicationByIDNotImplemented() GetAdminApplicationByIDResponder {
	return &GetAdminApplicationByIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetAdminApplicationByID has not yet been implemented",
		),
	}
}

type GetAdminApplicationByIDResponder interface {
	middleware.Responder
	GetAdminApplicationByIDResponder()
}
