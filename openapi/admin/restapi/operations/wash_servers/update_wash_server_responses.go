// Code generated by go-swagger; DO NOT EDIT.

package wash_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washbonus/openapi/admin/models"
)

// UpdateWashServerOKCode is the HTTP code returned for type UpdateWashServerOK
const UpdateWashServerOKCode int = 200

/*UpdateWashServerOK Success update

swagger:response updateWashServerOK
*/
type UpdateWashServerOK struct {

	/*
	  In: Body
	*/
	Payload *models.WashServer `json:"body,omitempty"`
}

// NewUpdateWashServerOK creates UpdateWashServerOK with default headers values
func NewUpdateWashServerOK() *UpdateWashServerOK {

	return &UpdateWashServerOK{}
}

// WithPayload adds the payload to the update wash server o k response
func (o *UpdateWashServerOK) WithPayload(payload *models.WashServer) *UpdateWashServerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update wash server o k response
func (o *UpdateWashServerOK) SetPayload(payload *models.WashServer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateWashServerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UpdateWashServerOK) UpdateWashServerResponder() {}

/*UpdateWashServerDefault Generic error response

swagger:response updateWashServerDefault
*/
type UpdateWashServerDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateWashServerDefault creates UpdateWashServerDefault with default headers values
func NewUpdateWashServerDefault(code int) *UpdateWashServerDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateWashServerDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update wash server default response
func (o *UpdateWashServerDefault) WithStatusCode(code int) *UpdateWashServerDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update wash server default response
func (o *UpdateWashServerDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update wash server default response
func (o *UpdateWashServerDefault) WithPayload(payload *models.Error) *UpdateWashServerDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update wash server default response
func (o *UpdateWashServerDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateWashServerDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UpdateWashServerDefault) UpdateWashServerResponder() {}

type UpdateWashServerNotImplementedResponder struct {
	middleware.Responder
}

func (*UpdateWashServerNotImplementedResponder) UpdateWashServerResponder() {}

func UpdateWashServerNotImplemented() UpdateWashServerResponder {
	return &UpdateWashServerNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.UpdateWashServer has not yet been implemented",
		),
	}
}

type UpdateWashServerResponder interface {
	middleware.Responder
	UpdateWashServerResponder()
}
