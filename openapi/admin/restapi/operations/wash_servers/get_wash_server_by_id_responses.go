// Code generated by go-swagger; DO NOT EDIT.

package wash_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washbonus/openapi/admin/models"
)

// GetWashServerByIDOKCode is the HTTP code returned for type GetWashServerByIDOK
const GetWashServerByIDOKCode int = 200

/*
GetWashServerByIDOK OK

swagger:response getWashServerByIdOK
*/
type GetWashServerByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.WashServer `json:"body,omitempty"`
}

// NewGetWashServerByIDOK creates GetWashServerByIDOK with default headers values
func NewGetWashServerByIDOK() *GetWashServerByIDOK {

	return &GetWashServerByIDOK{}
}

// WithPayload adds the payload to the get wash server by Id o k response
func (o *GetWashServerByIDOK) WithPayload(payload *models.WashServer) *GetWashServerByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash server by Id o k response
func (o *GetWashServerByIDOK) SetPayload(payload *models.WashServer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServerByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServerByIDOK) GetWashServerByIDResponder() {}

/*
GetWashServerByIDDefault Generic error response

swagger:response getWashServerByIdDefault
*/
type GetWashServerByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashServerByIDDefault creates GetWashServerByIDDefault with default headers values
func NewGetWashServerByIDDefault(code int) *GetWashServerByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetWashServerByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get wash server by Id default response
func (o *GetWashServerByIDDefault) WithStatusCode(code int) *GetWashServerByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get wash server by Id default response
func (o *GetWashServerByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get wash server by Id default response
func (o *GetWashServerByIDDefault) WithPayload(payload *models.Error) *GetWashServerByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash server by Id default response
func (o *GetWashServerByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServerByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServerByIDDefault) GetWashServerByIDResponder() {}

type GetWashServerByIDNotImplementedResponder struct {
	middleware.Responder
}

func (*GetWashServerByIDNotImplementedResponder) GetWashServerByIDResponder() {}

func GetWashServerByIDNotImplemented() GetWashServerByIDResponder {
	return &GetWashServerByIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetWashServerByID has not yet been implemented",
		),
	}
}

type GetWashServerByIDResponder interface {
	middleware.Responder
	GetWashServerByIDResponder()
}
