// Code generated by go-swagger; DO NOT EDIT.

package wash_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washbonus/openapi/admin/models"
)

// GetWashServersOKCode is the HTTP code returned for type GetWashServersOK
const GetWashServersOKCode int = 200

/*
GetWashServersOK OK

swagger:response getWashServersOK
*/
type GetWashServersOK struct {

	/*
	  In: Body
	*/
	Payload []*models.WashServer `json:"body,omitempty"`
}

// NewGetWashServersOK creates GetWashServersOK with default headers values
func NewGetWashServersOK() *GetWashServersOK {

	return &GetWashServersOK{}
}

// WithPayload adds the payload to the get wash servers o k response
func (o *GetWashServersOK) WithPayload(payload []*models.WashServer) *GetWashServersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash servers o k response
func (o *GetWashServersOK) SetPayload(payload []*models.WashServer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.WashServer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetWashServersOK) GetWashServersResponder() {}

/*
GetWashServersDefault Generic error response

swagger:response getWashServersDefault
*/
type GetWashServersDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashServersDefault creates GetWashServersDefault with default headers values
func NewGetWashServersDefault(code int) *GetWashServersDefault {
	if code <= 0 {
		code = 500
	}

	return &GetWashServersDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get wash servers default response
func (o *GetWashServersDefault) WithStatusCode(code int) *GetWashServersDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get wash servers default response
func (o *GetWashServersDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get wash servers default response
func (o *GetWashServersDefault) WithPayload(payload *models.Error) *GetWashServersDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash servers default response
func (o *GetWashServersDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServersDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServersDefault) GetWashServersResponder() {}

type GetWashServersNotImplementedResponder struct {
	middleware.Responder
}

func (*GetWashServersNotImplementedResponder) GetWashServersResponder() {}

func GetWashServersNotImplemented() GetWashServersResponder {
	return &GetWashServersNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetWashServers has not yet been implemented",
		),
	}
}

type GetWashServersResponder interface {
	middleware.Responder
	GetWashServersResponder()
}
