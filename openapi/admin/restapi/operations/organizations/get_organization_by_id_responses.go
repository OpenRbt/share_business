// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washbonus/openapi/admin/models"
)

// GetOrganizationByIDOKCode is the HTTP code returned for type GetOrganizationByIDOK
const GetOrganizationByIDOKCode int = 200

/*
GetOrganizationByIDOK OK

swagger:response getOrganizationByIdOK
*/
type GetOrganizationByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Organization `json:"body,omitempty"`
}

// NewGetOrganizationByIDOK creates GetOrganizationByIDOK with default headers values
func NewGetOrganizationByIDOK() *GetOrganizationByIDOK {

	return &GetOrganizationByIDOK{}
}

// WithPayload adds the payload to the get organization by Id o k response
func (o *GetOrganizationByIDOK) WithPayload(payload *models.Organization) *GetOrganizationByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organization by Id o k response
func (o *GetOrganizationByIDOK) SetPayload(payload *models.Organization) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetOrganizationByIDOK) GetOrganizationByIDResponder() {}

/*
GetOrganizationByIDDefault Generic error response

swagger:response getOrganizationByIdDefault
*/
type GetOrganizationByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOrganizationByIDDefault creates GetOrganizationByIDDefault with default headers values
func NewGetOrganizationByIDDefault(code int) *GetOrganizationByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetOrganizationByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get organization by Id default response
func (o *GetOrganizationByIDDefault) WithStatusCode(code int) *GetOrganizationByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get organization by Id default response
func (o *GetOrganizationByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get organization by Id default response
func (o *GetOrganizationByIDDefault) WithPayload(payload *models.Error) *GetOrganizationByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organization by Id default response
func (o *GetOrganizationByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetOrganizationByIDDefault) GetOrganizationByIDResponder() {}

type GetOrganizationByIDNotImplementedResponder struct {
	middleware.Responder
}

func (*GetOrganizationByIDNotImplementedResponder) GetOrganizationByIDResponder() {}

func GetOrganizationByIDNotImplemented() GetOrganizationByIDResponder {
	return &GetOrganizationByIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetOrganizationByID has not yet been implemented",
		),
	}
}

type GetOrganizationByIDResponder interface {
	middleware.Responder
	GetOrganizationByIDResponder()
}
