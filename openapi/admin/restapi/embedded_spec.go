// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Admin service for self-service car washes",
    "title": "wash-admin",
    "version": "1.0.0"
  },
  "basePath": "/admin",
  "paths": {
    "/organizations": {
      "get": {
        "tags": [
          "organizations"
        ],
        "operationId": "getOrganizations",
        "parameters": [
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "collectionFormat": "csv",
            "name": "ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Organization"
              }
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "post": {
        "tags": [
          "organizations"
        ],
        "operationId": "createOrganization",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OrganizationCreation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull created",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/organizations/{organizationId}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "operationId": "getOrganizationById",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "patch": {
        "tags": [
          "organizations"
        ],
        "operationId": "updateOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OrganizationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull updated",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/organizations/{organizationId}/users/{userId}": {
      "post": {
        "tags": [
          "organizations"
        ],
        "operationId": "assignUserToOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "operationId": "removeUserFromOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/server-groups": {
      "get": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "getServerGroups",
        "parameters": [
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServerGroup"
              }
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "post": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "createServerGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ServerGroupCreation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull created",
            "schema": {
              "$ref": "#/definitions/ServerGroup"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/server-groups/{groupId}": {
      "get": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "getServerGroupById",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerGroup"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "delete": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "deleteServerGroup",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "patch": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "updateServerGroup",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ServerGroupUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull updated",
            "schema": {
              "$ref": "#/definitions/ServerGroup"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/server-groups/{groupId}/wash-servers/{serverId}": {
      "post": {
        "tags": [
          "washServers",
          "serverGroup"
        ],
        "operationId": "assignServerToGroup",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "serverId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "getAdminUsers",
        "parameters": [
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/adminUserRole"
          },
          {
            "$ref": "#/parameters/isBlocked"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdminUser"
              }
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/users/applications": {
      "get": {
        "tags": [
          "applications"
        ],
        "operationId": "getAdminApplications",
        "parameters": [
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "enum": [
              "accepted",
              "rejected",
              "pending"
            ],
            "type": "string",
            "name": "status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "applications": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdminApplication"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "post": {
        "security": [],
        "tags": [
          "applications"
        ],
        "operationId": "createAdminApplication",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "application": {
                  "$ref": "#/definitions/AdminApplicationCreation"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdminApplication"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/users/applications/{id}": {
      "get": {
        "tags": [
          "applications"
        ],
        "operationId": "getAdminApplicationById",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdminApplication"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "post": {
        "tags": [
          "applications"
        ],
        "operationId": "reviewAdminApplication",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminApplicationReview"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "getAdminUserById",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdminUser"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "operationId": "blockAdminUser",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "patch": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "updateAdminUserRole",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "$ref": "#/definitions/AdminUserRole"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/wash-servers/": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "getWashServers",
        "parameters": [
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WashServer"
              }
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "post": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "createWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WashServerCreation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success creation",
            "schema": {
              "$ref": "#/definitions/WashServer"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/wash-servers/{serverId}": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "getWashServerById",
        "parameters": [
          {
            "type": "string",
            "name": "serverId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WashServer"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "delete": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "deleteWashServer",
        "parameters": [
          {
            "type": "string",
            "name": "serverId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "patch": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "updateWashServer",
        "parameters": [
          {
            "type": "string",
            "name": "serverId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WashServerUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success update",
            "schema": {
              "$ref": "#/definitions/WashServer"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    }
  },
  "definitions": {
    "AdminApplication": {
      "type": "object",
      "required": [
        "id",
        "user",
        "status"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "$ref": "#/definitions/ApplicationStatusEnum"
        },
        "user": {
          "$ref": "#/definitions/FirebaseUser"
        }
      }
    },
    "AdminApplicationCreation": {
      "type": "object",
      "required": [
        "user"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/FirebaseUser"
        }
      }
    },
    "AdminApplicationReview": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "role": {
          "allOf": [
            {
              "$ref": "#/definitions/AdminUserRole"
            },
            {
              "x-nullable": true
            }
          ]
        },
        "status": {
          "$ref": "#/definitions/ApplicationStatusEnum"
        }
      }
    },
    "AdminUser": {
      "description": "Admin user profile",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organization": {
          "type": "object",
          "properties": {
            "deleted": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            }
          },
          "x-nullable": true
        },
        "role": {
          "$ref": "#/definitions/AdminUserRole"
        }
      }
    },
    "AdminUserRole": {
      "type": "string",
      "enum": [
        "systemManager",
        "admin",
        "noAccess"
      ]
    },
    "ApplicationStatusEnum": {
      "type": "string",
      "enum": [
        "accepted",
        "rejected",
        "pending"
      ]
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "FirebaseUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Organization": {
      "type": "object",
      "properties": {
        "bonusPercentage": {
          "type": "integer",
          "maximum": 100
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "reportsProcessingDelayMinutes": {
          "type": "integer"
        },
        "utcOffset": {
          "type": "integer",
          "format": "int32",
          "maximum": 840,
          "minimum": -720
        }
      }
    },
    "OrganizationCreation": {
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "bonusPercentage": {
          "type": "integer",
          "maximum": 100,
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "reportsProcessingDelayMinutes": {
          "type": "integer",
          "x-nullable": true
        },
        "utcOffset": {
          "type": "integer",
          "format": "int32",
          "maximum": 840,
          "minimum": -720,
          "x-nullable": true
        }
      }
    },
    "OrganizationUpdate": {
      "type": "object",
      "properties": {
        "bonusPercentage": {
          "type": "integer",
          "maximum": 100,
          "x-nullable": true
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "displayName": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "reportsProcessingDelayMinutes": {
          "type": "integer",
          "x-nullable": true
        },
        "utcOffset": {
          "type": "integer",
          "format": "int32",
          "maximum": 840,
          "minimum": -720,
          "x-nullable": true
        }
      }
    },
    "ServerGroup": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "utcOffset": {
          "type": "integer",
          "format": "int32",
          "maximum": 840,
          "minimum": -720
        }
      }
    },
    "ServerGroupCreation": {
      "required": [
        "name",
        "description",
        "organizationId"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "utcOffset": {
          "type": "integer",
          "format": "int32",
          "maximum": 840,
          "minimum": -720,
          "x-nullable": true
        }
      }
    },
    "ServerGroupUpdate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "utcOffset": {
          "type": "integer",
          "format": "int32",
          "maximum": 840,
          "minimum": -720,
          "x-nullable": true
        }
      }
    },
    "WashServer": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "groupId": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "serviceKey": {
          "type": "string"
        }
      }
    },
    "WashServerCreation": {
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "groupId": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        }
      }
    },
    "WashServerUpdate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        }
      }
    }
  },
  "parameters": {
    "adminUserRole": {
      "enum": [
        "systemManager",
        "admin",
        "noAccess"
      ],
      "type": "string",
      "name": "role",
      "in": "query"
    },
    "isBlocked": {
      "type": "boolean",
      "name": "isBlocked",
      "in": "query"
    },
    "limit": {
      "type": "integer",
      "format": "int64",
      "default": 100,
      "description": "Maximum number of records to return",
      "name": "limit",
      "in": "query"
    },
    "offset": {
      "type": "integer",
      "format": "int64",
      "default": 0,
      "description": "Number of records to skip for pagination",
      "name": "offset",
      "in": "query"
    }
  },
  "responses": {
    "GenericError": {
      "description": "Generic error response",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "securityDefinitions": {
    "authKey": {
      "description": "Session token inside Authorization header.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "authKey": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Admin service for self-service car washes",
    "title": "wash-admin",
    "version": "1.0.0"
  },
  "basePath": "/admin",
  "paths": {
    "/organizations": {
      "get": {
        "tags": [
          "organizations"
        ],
        "operationId": "getOrganizations",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "Number of records to skip for pagination",
            "name": "offset",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "format": "int64",
            "default": 100,
            "description": "Maximum number of records to return",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "collectionFormat": "csv",
            "name": "ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Organization"
              }
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "organizations"
        ],
        "operationId": "createOrganization",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OrganizationCreation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull created",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "operationId": "getOrganizationById",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "organizations"
        ],
        "operationId": "updateOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OrganizationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull updated",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/users/{userId}": {
      "post": {
        "tags": [
          "organizations"
        ],
        "operationId": "assignUserToOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "operationId": "removeUserFromOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server-groups": {
      "get": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "getServerGroups",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "Number of records to skip for pagination",
            "name": "offset",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "format": "int64",
            "default": 100,
            "description": "Maximum number of records to return",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServerGroup"
              }
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "createServerGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ServerGroupCreation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull created",
            "schema": {
              "$ref": "#/definitions/ServerGroup"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server-groups/{groupId}": {
      "get": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "getServerGroupById",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerGroup"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "deleteServerGroup",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "updateServerGroup",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ServerGroupUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull updated",
            "schema": {
              "$ref": "#/definitions/ServerGroup"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server-groups/{groupId}/wash-servers/{serverId}": {
      "post": {
        "tags": [
          "washServers",
          "serverGroup"
        ],
        "operationId": "assignServerToGroup",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "serverId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "getAdminUsers",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "Number of records to skip for pagination",
            "name": "offset",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "format": "int64",
            "default": 100,
            "description": "Maximum number of records to return",
            "name": "limit",
            "in": "query"
          },
          {
            "enum": [
              "systemManager",
              "admin",
              "noAccess"
            ],
            "type": "string",
            "name": "role",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "isBlocked",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdminUser"
              }
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/applications": {
      "get": {
        "tags": [
          "applications"
        ],
        "operationId": "getAdminApplications",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "Number of records to skip for pagination",
            "name": "offset",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "format": "int64",
            "default": 100,
            "description": "Maximum number of records to return",
            "name": "limit",
            "in": "query"
          },
          {
            "enum": [
              "accepted",
              "rejected",
              "pending"
            ],
            "type": "string",
            "name": "status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "applications": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdminApplication"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [],
        "tags": [
          "applications"
        ],
        "operationId": "createAdminApplication",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "application": {
                  "$ref": "#/definitions/AdminApplicationCreation"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdminApplication"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/applications/{id}": {
      "get": {
        "tags": [
          "applications"
        ],
        "operationId": "getAdminApplicationById",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdminApplication"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "applications"
        ],
        "operationId": "reviewAdminApplication",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminApplicationReview"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "getAdminUserById",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdminUser"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "operationId": "blockAdminUser",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "updateAdminUserRole",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "$ref": "#/definitions/AdminUserRole"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wash-servers/": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "getWashServers",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "Number of records to skip for pagination",
            "name": "offset",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "format": "int64",
            "default": 100,
            "description": "Maximum number of records to return",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WashServer"
              }
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "createWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WashServerCreation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success creation",
            "schema": {
              "$ref": "#/definitions/WashServer"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wash-servers/{serverId}": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "getWashServerById",
        "parameters": [
          {
            "type": "string",
            "name": "serverId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WashServer"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "deleteWashServer",
        "parameters": [
          {
            "type": "string",
            "name": "serverId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "updateWashServer",
        "parameters": [
          {
            "type": "string",
            "name": "serverId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WashServerUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success update",
            "schema": {
              "$ref": "#/definitions/WashServer"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AdminApplication": {
      "type": "object",
      "required": [
        "id",
        "user",
        "status"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "$ref": "#/definitions/ApplicationStatusEnum"
        },
        "user": {
          "$ref": "#/definitions/FirebaseUser"
        }
      }
    },
    "AdminApplicationCreation": {
      "type": "object",
      "required": [
        "user"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/FirebaseUser"
        }
      }
    },
    "AdminApplicationReview": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "role": {
          "allOf": [
            {
              "$ref": "#/definitions/AdminUserRole"
            },
            {
              "x-nullable": true
            }
          ]
        },
        "status": {
          "$ref": "#/definitions/ApplicationStatusEnum"
        }
      }
    },
    "AdminUser": {
      "description": "Admin user profile",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organization": {
          "type": "object",
          "properties": {
            "deleted": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            }
          },
          "x-nullable": true
        },
        "role": {
          "$ref": "#/definitions/AdminUserRole"
        }
      }
    },
    "AdminUserOrganization": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      },
      "x-nullable": true
    },
    "AdminUserRole": {
      "type": "string",
      "enum": [
        "systemManager",
        "admin",
        "noAccess"
      ]
    },
    "ApplicationStatusEnum": {
      "type": "string",
      "enum": [
        "accepted",
        "rejected",
        "pending"
      ]
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "FirebaseUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Organization": {
      "type": "object",
      "properties": {
        "bonusPercentage": {
          "type": "integer",
          "maximum": 100,
          "minimum": 0
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "reportsProcessingDelayMinutes": {
          "type": "integer",
          "minimum": 0
        },
        "utcOffset": {
          "type": "integer",
          "format": "int32",
          "maximum": 840,
          "minimum": -720
        }
      }
    },
    "OrganizationCreation": {
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "bonusPercentage": {
          "type": "integer",
          "maximum": 100,
          "minimum": 0,
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "reportsProcessingDelayMinutes": {
          "type": "integer",
          "minimum": 0,
          "x-nullable": true
        },
        "utcOffset": {
          "type": "integer",
          "format": "int32",
          "maximum": 840,
          "minimum": -720,
          "x-nullable": true
        }
      }
    },
    "OrganizationUpdate": {
      "type": "object",
      "properties": {
        "bonusPercentage": {
          "type": "integer",
          "maximum": 100,
          "minimum": 0,
          "x-nullable": true
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "displayName": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "reportsProcessingDelayMinutes": {
          "type": "integer",
          "minimum": 0,
          "x-nullable": true
        },
        "utcOffset": {
          "type": "integer",
          "format": "int32",
          "maximum": 840,
          "minimum": -720,
          "x-nullable": true
        }
      }
    },
    "ServerGroup": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "utcOffset": {
          "type": "integer",
          "format": "int32",
          "maximum": 840,
          "minimum": -720
        }
      }
    },
    "ServerGroupCreation": {
      "required": [
        "name",
        "description",
        "organizationId"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "utcOffset": {
          "type": "integer",
          "format": "int32",
          "maximum": 840,
          "minimum": -720,
          "x-nullable": true
        }
      }
    },
    "ServerGroupUpdate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "utcOffset": {
          "type": "integer",
          "format": "int32",
          "maximum": 840,
          "minimum": -720,
          "x-nullable": true
        }
      }
    },
    "WashServer": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "groupId": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "serviceKey": {
          "type": "string"
        }
      }
    },
    "WashServerCreation": {
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "groupId": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        }
      }
    },
    "WashServerUpdate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        }
      }
    }
  },
  "parameters": {
    "adminUserRole": {
      "enum": [
        "systemManager",
        "admin",
        "noAccess"
      ],
      "type": "string",
      "name": "role",
      "in": "query"
    },
    "isBlocked": {
      "type": "boolean",
      "name": "isBlocked",
      "in": "query"
    },
    "limit": {
      "minimum": 0,
      "type": "integer",
      "format": "int64",
      "default": 100,
      "description": "Maximum number of records to return",
      "name": "limit",
      "in": "query"
    },
    "offset": {
      "minimum": 0,
      "type": "integer",
      "format": "int64",
      "default": 0,
      "description": "Number of records to skip for pagination",
      "name": "offset",
      "in": "query"
    }
  },
  "responses": {
    "GenericError": {
      "description": "Generic error response",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "securityDefinitions": {
    "authKey": {
      "description": "Session token inside Authorization header.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "authKey": []
    }
  ]
}`))
}
