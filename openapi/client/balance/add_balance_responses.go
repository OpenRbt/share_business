// Code generated by go-swagger; DO NOT EDIT.

package balance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"wash-bonus/openapi/models"
)

// AddBalanceReader is a Reader for the AddBalance structure.
type AddBalanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddBalanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddBalanceCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAddBalanceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddBalanceCreated creates a AddBalanceCreated with default headers values
func NewAddBalanceCreated() *AddBalanceCreated {
	return &AddBalanceCreated{}
}

/*
AddBalanceCreated describes a response with status code 201, with default header values.

Created
*/
type AddBalanceCreated struct {
	Payload *models.Balance
}

// IsSuccess returns true when this add balance created response has a 2xx status code
func (o *AddBalanceCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add balance created response has a 3xx status code
func (o *AddBalanceCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add balance created response has a 4xx status code
func (o *AddBalanceCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add balance created response has a 5xx status code
func (o *AddBalanceCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add balance created response a status code equal to that given
func (o *AddBalanceCreated) IsCode(code int) bool {
	return code == 201
}

func (o *AddBalanceCreated) Error() string {
	return fmt.Sprintf("[POST /balance/add][%d] addBalanceCreated  %+v", 201, o.Payload)
}

func (o *AddBalanceCreated) String() string {
	return fmt.Sprintf("[POST /balance/add][%d] addBalanceCreated  %+v", 201, o.Payload)
}

func (o *AddBalanceCreated) GetPayload() *models.Balance {
	return o.Payload
}

func (o *AddBalanceCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Balance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddBalanceDefault creates a AddBalanceDefault with default headers values
func NewAddBalanceDefault(code int) *AddBalanceDefault {
	return &AddBalanceDefault{
		_statusCode: code,
	}
}

/*
AddBalanceDefault describes a response with status code -1, with default header values.

error
*/
type AddBalanceDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the add balance default response
func (o *AddBalanceDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this add balance default response has a 2xx status code
func (o *AddBalanceDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this add balance default response has a 3xx status code
func (o *AddBalanceDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this add balance default response has a 4xx status code
func (o *AddBalanceDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this add balance default response has a 5xx status code
func (o *AddBalanceDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this add balance default response a status code equal to that given
func (o *AddBalanceDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *AddBalanceDefault) Error() string {
	return fmt.Sprintf("[POST /balance/add][%d] addBalance default  %+v", o._statusCode, o.Payload)
}

func (o *AddBalanceDefault) String() string {
	return fmt.Sprintf("[POST /balance/add][%d] addBalance default  %+v", o._statusCode, o.Payload)
}

func (o *AddBalanceDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddBalanceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
