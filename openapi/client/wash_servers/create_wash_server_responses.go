// Code generated by go-swagger; DO NOT EDIT.

package wash_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"washBonus/openapi/models"
)

// CreateWashServerReader is a Reader for the CreateWashServer structure.
type CreateWashServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateWashServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateWashServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateWashServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateWashServerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateWashServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /wash-servers/] createWashServer", response, response.Code())
	}
}

// NewCreateWashServerOK creates a CreateWashServerOK with default headers values
func NewCreateWashServerOK() *CreateWashServerOK {
	return &CreateWashServerOK{}
}

/*
CreateWashServerOK describes a response with status code 200, with default header values.

Success creation
*/
type CreateWashServerOK struct {
	Payload *models.WashServer
}

// IsSuccess returns true when this create wash server o k response has a 2xx status code
func (o *CreateWashServerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create wash server o k response has a 3xx status code
func (o *CreateWashServerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create wash server o k response has a 4xx status code
func (o *CreateWashServerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create wash server o k response has a 5xx status code
func (o *CreateWashServerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create wash server o k response a status code equal to that given
func (o *CreateWashServerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create wash server o k response
func (o *CreateWashServerOK) Code() int {
	return 200
}

func (o *CreateWashServerOK) Error() string {
	return fmt.Sprintf("[POST /wash-servers/][%d] createWashServerOK  %+v", 200, o.Payload)
}

func (o *CreateWashServerOK) String() string {
	return fmt.Sprintf("[POST /wash-servers/][%d] createWashServerOK  %+v", 200, o.Payload)
}

func (o *CreateWashServerOK) GetPayload() *models.WashServer {
	return o.Payload
}

func (o *CreateWashServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WashServer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWashServerBadRequest creates a CreateWashServerBadRequest with default headers values
func NewCreateWashServerBadRequest() *CreateWashServerBadRequest {
	return &CreateWashServerBadRequest{}
}

/*
CreateWashServerBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateWashServerBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create wash server bad request response has a 2xx status code
func (o *CreateWashServerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create wash server bad request response has a 3xx status code
func (o *CreateWashServerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create wash server bad request response has a 4xx status code
func (o *CreateWashServerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create wash server bad request response has a 5xx status code
func (o *CreateWashServerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create wash server bad request response a status code equal to that given
func (o *CreateWashServerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create wash server bad request response
func (o *CreateWashServerBadRequest) Code() int {
	return 400
}

func (o *CreateWashServerBadRequest) Error() string {
	return fmt.Sprintf("[POST /wash-servers/][%d] createWashServerBadRequest  %+v", 400, o.Payload)
}

func (o *CreateWashServerBadRequest) String() string {
	return fmt.Sprintf("[POST /wash-servers/][%d] createWashServerBadRequest  %+v", 400, o.Payload)
}

func (o *CreateWashServerBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWashServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWashServerForbidden creates a CreateWashServerForbidden with default headers values
func NewCreateWashServerForbidden() *CreateWashServerForbidden {
	return &CreateWashServerForbidden{}
}

/*
CreateWashServerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateWashServerForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create wash server forbidden response has a 2xx status code
func (o *CreateWashServerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create wash server forbidden response has a 3xx status code
func (o *CreateWashServerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create wash server forbidden response has a 4xx status code
func (o *CreateWashServerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create wash server forbidden response has a 5xx status code
func (o *CreateWashServerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create wash server forbidden response a status code equal to that given
func (o *CreateWashServerForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create wash server forbidden response
func (o *CreateWashServerForbidden) Code() int {
	return 403
}

func (o *CreateWashServerForbidden) Error() string {
	return fmt.Sprintf("[POST /wash-servers/][%d] createWashServerForbidden  %+v", 403, o.Payload)
}

func (o *CreateWashServerForbidden) String() string {
	return fmt.Sprintf("[POST /wash-servers/][%d] createWashServerForbidden  %+v", 403, o.Payload)
}

func (o *CreateWashServerForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWashServerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWashServerInternalServerError creates a CreateWashServerInternalServerError with default headers values
func NewCreateWashServerInternalServerError() *CreateWashServerInternalServerError {
	return &CreateWashServerInternalServerError{}
}

/*
CreateWashServerInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type CreateWashServerInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this create wash server internal server error response has a 2xx status code
func (o *CreateWashServerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create wash server internal server error response has a 3xx status code
func (o *CreateWashServerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create wash server internal server error response has a 4xx status code
func (o *CreateWashServerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create wash server internal server error response has a 5xx status code
func (o *CreateWashServerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create wash server internal server error response a status code equal to that given
func (o *CreateWashServerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create wash server internal server error response
func (o *CreateWashServerInternalServerError) Code() int {
	return 500
}

func (o *CreateWashServerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /wash-servers/][%d] createWashServerInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateWashServerInternalServerError) String() string {
	return fmt.Sprintf("[POST /wash-servers/][%d] createWashServerInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateWashServerInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWashServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
