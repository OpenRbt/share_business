// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ManagePermissions manage permissions
//
// swagger:model ManagePermissions
type ManagePermissions struct {

	// configure
	Configure string `json:"configure,omitempty"`

	// read
	Read string `json:"read,omitempty"`

	// write
	Write string `json:"write,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *ManagePermissions) UnmarshalJSON(data []byte) error {
	var props struct {

		// configure
		Configure string `json:"configure,omitempty"`

		// read
		Read string `json:"read,omitempty"`

		// write
		Write string `json:"write,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.Configure = props.Configure
	m.Read = props.Read
	m.Write = props.Write
	return nil
}

// Validate validates this manage permissions
func (m *ManagePermissions) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this manage permissions based on context it is used
func (m *ManagePermissions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ManagePermissions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ManagePermissions) UnmarshalBinary(b []byte) error {
	var res ManagePermissions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
